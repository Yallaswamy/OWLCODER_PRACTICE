//owlcoder day-11
//seive algorithm
/*
//find prime
100
1 2 4 10 |  20 25 50 100
for i=1 ;i*i<=N ;i++
if n%i==0:
    c++;
    if n%i!=i:
       c++;
=================
//seive

100 = 2^2*5^2
with in range the number have three divisiors 

count of divisior x^p1*y^p2 ==(p1+1)*(p2+1)
  3=(p1+1)*(p2+1)*(p3+1)...
    1*(2+1)*1..
      or
    (2+1)*1*1..
    if sqrt of number is equal to prime that number have 3 divisior only
    
====================================
//how do find prime factorzation
to store element in the  sieve as number as equal to i
to put every multiple to  it
*/


#include<bits/stdc++.h>
using namespace std;
int N=1e6+1;
vector<long long>primes(N,1);
viod seive(){
    primes[0]=primes[1]=0;
    for(int i=2;i*i<=N;i++){
        if(primes[j]==1){
            for(j=i*i;j<N;j+=i){
                primes[j]=0;
            }
        }
    }
}
int main(){
    seive();
    long long t;
    cin>>t;  o(t)
    while(t--){
        long long n;
        cin>>n;
        if(primes[n]==1){
            cout<<"YES"<<endl;
        }
        else{
            cout<<"No"<<endl;
        }
    }
}
