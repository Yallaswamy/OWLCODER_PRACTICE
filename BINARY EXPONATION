//modular arithmetic
//BINARY EXPONATION
/*
//pow of two number
a=2 b=7 res=1
while(b){
    if(b&1){
        b=b-1;
        res=res*a;
    }
    else{
        b=b/2;
        a=a*a;
    }
}
*/
long long power(long long base,long long exp){
    if(exp==0)return 1;
    long long ans = power(base,exp/2);
    if(exp%2==0){
        return (ans%mod*ans%mod)%mod;
    }
    else {
        return (ans%mod*ans%mod*base%mod)%mod;
    }
}
int BINARYEXPONATION(int a,int b){
    int ans=1;
    while(b){
        if(b&1){
            b=b-1;
            ans*=a;
        }
        else{
            b=b/2;
            a=a*a;
        }
    }
    return ans;
}

int inverse(int b){
    const  long long  mod=1e9+7;
    return  BINARYEXPONATION(b,mod-2);
    
    
}
#include<bits/stdc++.h>
using namespace std;
int main(){
    int a,b;
    cin>>a>>b;
    int ans=BINARYEXPONATION(a,b);
    int ans1=inverse(b);
    cout<<ans;
    cout<<ans1;
}
